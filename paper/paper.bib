@MISC{Merkel2014-da,
  title     = "Docker: Lightweight Linux Containers for Consistent Development
               and Deployment",
  author    = "Merkel, Dirk",
  journal   = "Linux J.",
  publisher = "Belltown Media",
  volume    =  2014,
  number    =  239,
  month     =  mar,
  year      =  2014,
  address   = "Houston, TX",
  url       = {https://www.linuxjournal.com/content/docker-lightweight-linux-containers-consistent-development-and-deployment}
}

@MISC{container-tree,
  title       = "container-tree",
  abstract    = "container-tree: data structures to study containers",
  howpublished = "\url{https://github.com/singularityhub/container-tree}",
  year      =  2018,
  institution = "Github",
  doi       = {10.5281/zenodo.2602127}
}

@MISC{container-diff,
  title       = "container-diff",
  abstract    = "container-diff: Diff your Docker containers",
  howpublished = "\url{https://www.github.com/GoogleContainerTools/container-diff}",
  year      =  2017,
  institution = "Github"
}

@ARTICLE{Sochat2017-ud,
  title    = "Enhancing reproducibility in scientific computing: Metrics and
              registry for Singularity containers",
  author   = "Sochat, Vanessa V and Prybol, Cameron J and Kurtzer, Gregory M",
  abstract = "Here we present Singularity Hub, a framework to build and deploy
              Singularity containers for mobility of compute, and the
              singularity-python software with novel metrics for assessing
              reproducibility of such containers. Singularity containers make
              it possible for scientists and developers to package reproducible
              software, and Singularity Hub adds automation to this workflow by
              building, capturing metadata for, visualizing, and serving
              containers programmatically. Our novel metrics, based on custom
              filters of content hashes of container contents, allow for
              comparison of an entire container, including operating system,
              custom software, and metadata. First we will review Singularity
              Hub's primary use cases and how the infrastructure has been
              designed to support modern, common workflows. Next, we conduct
              three analyses to demonstrate build consistency, reproducibility
              metric and performance and interpretability, and potential for
              discovery. This is the first effort to demonstrate a rigorous
              assessment of measurable similarity between containers and
              operating systems. We provide these capabilities within
              Singularity Hub, as well as the source software
              singularity-python that provides the underlying functionality.
              Singularity Hub is available at https://singularity-hub.org, and
              we are excited to provide it as an openly available platform for
              building, and deploying scientific containers.",
  journal  = "PLoS One",
  volume   =  12,
  number   =  11,
  pages    = "e0188511",
  month    =  nov,
  year     =  2017,
  language = "en",
  doi      = "{https://doi.org/10.1371/journal.pone.0188511}"
}
